{"version":3,"sources":["utils/utils.js","Card.jsx","Inicio.jsx","Personaje.jsx","serviceWorker.js","index.js","App.js"],"names":["H1Sw","styled","h1","_templateObject","props","size","weigth","align","InputSw","input","_templateObject2","PSw","p","_templateObject3","SectionSw","section","_templateObject4","ArticleSw","article","_templateObject5","ButtonSw","a","_templateObject6","ArticleSwPer","_templateObject7","Card","_useState","useState","_useState2","Object","slicedToArray","items","setItems","_useState3","_useState4","search","setSearch","useEffect","fetch","mode","then","res","json","results","filterPerson","filter","person","name","toLowerCase","indexOf","react_default","createElement","placeholder","onChange","e","currentTarget","value","map","item","key","heigth","href","Inicio","Card_Card","Personaje","Boolean","window","location","hostname","match","ReactDOM","render","react_router_dom","basename","process","react_router","path","exact","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f7863be.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const H1Sw =  styled.h1`\r\n    font-size: ${props => props.size || \"110px\"};\r\n    font-weight: ${props => props.weigth || \"100\"};\r\n    text-align: ${props => props.align || \"center\"};\r\n    margin: 0;\r\n`;\r\n\r\nexport const InputSw = styled.input`\r\n    width: 34%;\r\n    margin: 10px 0 10px 32%;\r\n    padding: 10px;\r\n    border: 1px solid blue;\r\n`;\r\n\r\nexport const PSw = styled.p`\r\n    text-align: ${props => props.align || \"center\"};\r\n    font-size: ${props => props.size || \"18px\"};\r\n    margin: 10px;\r\n    font-weight: 600;\r\n    background: none;\r\n    text-transform: uppercase;\r\n`;\r\n\r\nexport const SectionSw = styled.section`\r\n    width: 90%;\r\n    margin: 20px 5%;\r\n`;\r\n\r\nexport const ArticleSw = styled.article`\r\n    background: -webkit-linear-gradient(left, #02d9ff 0%, #007fd9 100%);\r\n    width: 28%;\r\n    display: inline-block;\r\n    margin: 10px 2.5%;\r\n    padding: 20px 0;\r\n`;\r\n\r\nexport const ButtonSw = styled.a`\r\n    background: none;\r\n    border: none;\r\n    margin: 20px 30%;\r\n    cursor: pointer;\r\n    font-size: 10px;\r\n`;\r\n\r\nexport const ArticleSwPer = styled.article`\r\n    width: 40%;\r\n    margin: 40px 10%;\r\n    border: 1px solid red;\r\n    padding: 40px;\r\n`;","import React from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport { SectionSw, ArticleSw, PSw, ButtonSw, InputSw } from \"./utils/utils\";\r\n\r\n \r\n\r\nexport const Card = () => {\r\n\tconst [items, setItems] = useState([]);\r\n\tconst [search, setSearch] = useState(\"\");\r\n\tuseEffect(() => {\r\n\t\tfetch(\"https://swapi.co/api/people/\", {mode: 'cors'})\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(json => {\r\n\t\t\t\tsetItems(json.results);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tconst filterPerson = items.filter( person => {\r\n\t\treturn person.name.toLowerCase().indexOf(search.toLowerCase()) !== -1;\r\n\t});\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<InputSw placeholder=\"BUSCAR\" onChange={e => setSearch(e.currentTarget.value)}/>\r\n\t\t\t<SectionSw>\r\n\t\t\t\t{filterPerson.map(item => (\r\n\t\t\t\t\t<ArticleSw key={item.name+item.heigth}>\r\n\t\t\t\t\t\t<PSw size=\"25px;\">{item.name}</PSw>\r\n\t\t\t\t\t\t<ButtonSw href=\"/personaje/\">VER DETALLE</ButtonSw>\r\n\t\t\t\t\t</ArticleSw>\t\r\n\t\t\t\t))}\r\n\t\t\t</SectionSw>\r\n\t\t</div>\r\n\t)\r\n};\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { Card } from \"./Card\";\r\nimport { H1Sw, PSw } from \"./utils/utils\";\r\n\r\nconst Inicio = () => {\r\n  return(\r\n    <div>\r\n      <H1Sw size=\"120px\" weigth=\"600\">STAR WARS</H1Sw>\r\n      <H1Sw >PERSONAJES</H1Sw>\r\n      <PSw>RESULTADOS</PSw>\r\n      <Card />\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Inicio;","import React from \"react\";\r\nimport { SectionSw, H1Sw, ArticleSwPer, PSw, ButtonSw } from \"./utils/utils\";\r\n\r\nconst Personaje = () => {\r\n\treturn (\r\n\t\t<SectionSw>\r\n\t\t\t<H1Sw size=\"120px\" weigth=\"600\" align=\"left\">Lucke SKYWALKER</H1Sw>\r\n\t\t\t<H1Sw align=\"left\">Tattoline</H1Sw>\r\n\t\t\t<ArticleSwPer>\r\n\t\t\t\t<PSw align=\"left\">Peso: 172kg</PSw>\r\n\t\t\t\t<PSw align=\"left\">Peso: 172kg</PSw>\r\n\t\t\t\t<PSw align=\"left\">Peso: 172kg</PSw>\r\n\t\t\t</ArticleSwPer>\r\n\t\t\t<ButtonSw href=\"/\">VOLVER</ButtonSw>\r\n\t\t</SectionSw>\r\n\t);\r\n};\r\n\r\nexport default Personaje;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Inicio from \"./Inicio\";\nimport Personaje from \"./Personaje\";\n\nexport const App = () => {\n  return(\n    <Router basename={process.env.PUBLIC_URL}>\n      <Route path=\"/\" exact component={Inicio} />\n      <Route path=\"/Personaje/\" component={Personaje} />\n    </Router>\n  )\n};\n"],"sourceRoot":""}